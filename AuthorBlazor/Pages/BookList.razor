@page "/BookList"
@using AuthorBlazor.Data
@using Microsoft.AspNetCore.Authentication.OAuth.Claims
@using Model
@using System.Collections
@inject NavigationManager NavigationManager
@inject IAdultController adultController
@inject IBookController bookController
<h3>BookList</h3>

@if (authorsToShow == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Title</th>
            <th>PublicationYear</th>
            <th>NumberOfPages</th>
            <th>FirstName</th>
            <th>LastName</th>
            <th>Delete</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var author in authorsToShow)
        {
            foreach (var book in author.Books)
            {
                <tr>
                    <td>@book.Tittle</td>
                    <td>@book.PublicationYear</td>
                    <td>@book.NumberOfPages</td>
                    <td>@author.FirsName</td>
                    <td>@author.LastName</td>
                    <td>
                        <button @onclick="@(() => Delete(book, author.Id))">
                            <i class="oi oi-trash" style="color:red"/>
                        </button>
                    </td>

                </tr>
            }
        }
        </tbody>
    </table>
}

@code {
    private IList<Author> allAuthors;
    private IList<Author> authorsToShow;

    protected override async Task OnInitializedAsync()
    {
        allAuthors = await adultController.GetAuthor();
        authorsToShow = allAuthors;
    }

    private async void Delete(Book item, int id)
    {
        allAuthors.FirstOrDefault(t => t.Id == id).Books.Remove(item);
        await bookController.DeleteBook(item);
    }

}